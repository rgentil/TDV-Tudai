


/***********************ProgramaTest********************************************/
 /* Imports */
package tudai.tdyv.junit.test;

import java.util.Date;

//import org.junit.After;
//import org.junit.AfterClass;
import org.junit.jupiter.api.*;
//import org.junit.BeforeClass;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.RepeatedTest;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

import tudai.tdyv.junit.src.Programa;
import tudai.tdyv.junit.src.Programacion;
import tudai.tdyv.junit.src.ProgrmacionNoEncontradaException;
import tudai.tdyv.junit.src.Tarea;





@BeforeEach
	public void setUp() throws Exception {
		Date d1 = new Date(2015,12,24,22,00);
		Date d2 = new Date(2015,12,25,06,00);
		System.out.println("Setup");
		
		_defaultTarea 		 = new Tarea("Festejar Navidad");
		_defaultProgramacion = new Programacion(d1,d2,_defaultTarea);
		_defaultPrograma	 = new Programa();
	}
	
	/-----------------------------------------------/
	   @RepeatedTest(5)  
    @DisplayName("Test de contar la cantidad de ocurrencias")
	public void testGetCantOcurrencias() {
System.out.println("test GetCantOcurrencias");
		
		_defaultPrograma.eliminarProgramaciones();
		assertEquals(0, _defaultPrograma.getCantProgramaciones());
		
		_defaultPrograma.addProgramacion(_defaultProgramacion);
		Date d1 = new Date(2016,1,23,00,00);
		Date d2 = new Date(2016,1,23,23,59);
		Date d3 = new Date(2016,1,06,00,00);
		Date d4 = new Date(2016,1,06,06,00);
		
		Tarea t1	= new Tarea("Festejar Cumpleanios");
		Tarea t2	= new Tarea("Cortar pasto para camellos");
		
		Programacion cumpleanios	= new Programacion(d1, d2,t1);
		Programacion reyes			= new Programacion(d3, d4,t2);
		
		_defaultPrograma.addProgramacion(cumpleanios);
		_defaultPrograma.addProgramacion(reyes);
	
		assertEquals(3, _defaultPrograma.getCantProgramaciones(),"la cantidad debe ser 3");
	}
	//--------------------------------------------------
	@Test
	public void testAddProgramacion() {
		System.out.println("testAddProgramacion");
		int programacionesHastaElMomento = _defaultPrograma.getCantProgramaciones();
		_defaultPrograma.addProgramacion(_defaultProgramacion);
		assertEquals(programacionesHastaElMomento+1,_defaultPrograma.getCantProgramaciones());
	}
	//---------------------------------------
	
	
	
	@Test
	public void testRemoveProgramacion() throws ProgrmacionNoEncontradaException {
		System.out.println("testRemoveProgramacion");
		Date d1 = new Date(2015,12,31,22,00);
		Date d2 = new Date(2016,1,1,06,00);
		Tarea t	= new Tarea("Recibir añ¯ Žuevo");
		
		Programacion otraProgramacion = new Programacion(d2, d2,t);
		_defaultPrograma.addProgramacion(otraProgramacion);
		int programacionesHastaElMomento = _defaultPrograma.getCantProgramaciones();
		
			_defaultPrograma.removeProgramacion(otraProgramacion);
			assertEquals(programacionesHastaElMomento-1,_defaultPrograma.getCantProgramaciones());
	
		
	}
	
	//----------------------------------------------
	//Reemplazar
	@Test
	public void testExpectedProgramacionNoEnconreadaException() {

		Assertions.assertThrows(ProgrmacionNoEncontradaException.class ,()->{
			_defaultPrograma.eliminarProgramaciones();
			_defaultPrograma.removeProgramacion(_defaultProgramacion);
		});

	}

	
	//--------------------------------------------
	@Test
	public void testEliminarProgramaciones() {
		System.out.println("testEliminarProgramaciones");
		_defaultPrograma.eliminarProgramaciones();
		assertEquals(0,_defaultPrograma.getCantProgramaciones());
		
	}
	//-------------------------------------------
	@Test
	public void testProgramaVacio() {
		System.out.println("testProgramaVacio");
		_defaultPrograma.eliminarProgramaciones();
		assertEquals(true,_defaultPrograma.programaVacio());
	}
	//-----------------------------------------
	
